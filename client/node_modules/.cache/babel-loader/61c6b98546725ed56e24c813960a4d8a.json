{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ather/workspace/projects/react/streams/client/src/streams/StreamCreate.js\";\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamCreate extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderInput = ({\n      input,\n      label,\n      meta\n    }) => {\n      const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 4\n      }, this);\n    };\n  }\n\n  onSubmit(formValues) {\n    console.log(formValues);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui form error\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"title\",\n        component: this.renderInput,\n        label: \"Enter Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"description\",\n        component: this.renderInput,\n        label: \"Enter description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = 'You must enter a Title';\n  }\n\n  if (!formValues.description) {\n    errors.description = 'You must enter a Description';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'streamCreate',\n  validate: validate\n})(StreamCreate);","map":{"version":3,"sources":["/Users/ather/workspace/projects/react/streams/client/src/streams/StreamCreate.js"],"names":["React","Component","Field","reduxForm","StreamCreate","renderInput","input","label","meta","className","error","touched","onSubmit","formValues","console","log","render","props","handleSubmit","validate","errors","title","description","form"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SACpCI,WADoC,GACtB,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA;AAAhB,KAAD,KAA4B;AACzC,YAAMC,SAAS,GAAI,SAAQD,IAAI,CAACE,KAAL,IAAcF,IAAI,CAACG,OAAnB,GAA6B,OAA7B,GAAuC,EAAG,EAArE;AACA,0BACC;AAAK,QAAA,SAAS,EAAEF,SAAhB;AAAA,gCACC;AAAA,oBAAQF;AAAR;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,sBAAWD,KAAX;AAAkB,UAAA,YAAY,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AAMA,KATmC;AAAA;;AAUpCM,EAAAA,QAAQ,CAACC,UAAD,EAAa;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA;;AACDG,EAAAA,MAAM,GAAG;AACR,wBACC;AACC,MAAA,SAAS,EAAC,eADX;AAEC,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKN,QAA7B,CAFX;AAAA,8BAGC,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAE,KAAKP,WAApC;AAAiD,QAAA,KAAK,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,cAHD,eAIC,QAAC,KAAD;AACC,QAAA,IAAI,EAAC,aADN;AAEC,QAAA,SAAS,EAAE,KAAKA,WAFjB;AAGC,QAAA,KAAK,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,cAJD,eASC;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAaA;;AA3BmC;;AA6BrC,MAAMc,QAAQ,GAAIN,UAAD,IAAgB;AAChC,QAAMO,MAAM,GAAG,EAAf;;AACA,MAAI,CAACP,UAAU,CAACQ,KAAhB,EAAuB;AACtBD,IAAAA,MAAM,CAACC,KAAP,GAAe,wBAAf;AACA;;AACD,MAAI,CAACR,UAAU,CAACS,WAAhB,EAA6B;AAC5BF,IAAAA,MAAM,CAACE,WAAP,GAAqB,8BAArB;AACA;;AACD,SAAOF,MAAP;AACA,CATD;;AAUA,eAAejB,SAAS,CAAC;AACxBoB,EAAAA,IAAI,EAAE,cADkB;AAExBJ,EAAAA,QAAQ,EAAEA;AAFc,CAAD,CAAT,CAGZf,YAHY,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamCreate extends Component {\n\trenderInput = ({ input, label, meta }) => {\n\t\tconst className = `field ${meta.error && meta.touched ? 'error' : ''}`;\n\t\treturn (\n\t\t\t<div className={className}>\n\t\t\t\t<label>{label}</label>\n\t\t\t\t<input {...input} autoComplete='off' />\n\t\t\t</div>\n\t\t);\n\t};\n\tonSubmit(formValues) {\n\t\tconsole.log(formValues);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<form\n\t\t\t\tclassName='ui form error'\n\t\t\t\tonSubmit={this.props.handleSubmit(this.onSubmit)}>\n\t\t\t\t<Field name='title' component={this.renderInput} label='Enter Title' />\n\t\t\t\t<Field\n\t\t\t\t\tname='description'\n\t\t\t\t\tcomponent={this.renderInput}\n\t\t\t\t\tlabel='Enter description'\n\t\t\t\t/>\n\t\t\t\t<button className='ui button primary'>Submit</button>\n\t\t\t</form>\n\t\t);\n\t}\n}\nconst validate = (formValues) => {\n\tconst errors = {};\n\tif (!formValues.title) {\n\t\terrors.title = 'You must enter a Title';\n\t}\n\tif (!formValues.description) {\n\t\terrors.description = 'You must enter a Description';\n\t}\n\treturn errors;\n};\nexport default reduxForm({\n\tform: 'streamCreate',\n\tvalidate: validate,\n})(StreamCreate);\n"]},"metadata":{},"sourceType":"module"}